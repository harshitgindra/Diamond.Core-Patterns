<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebExample</name>
    </assembly>
    <members>
        <member name="T:Diamond.Core.Example.Web.Mappings.MappingProfile">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.Web.Mappings.MappingProfile.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Diamond.Core.Example.CreateInvoiceAsyncAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.CreateInvoiceAsyncAction.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Example.CreateInvoiceAsyncAction},Diamond.Core.Repository.IRepositoryFactory,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repositoryFactory"></param>
            <param name="mapper"></param>
        </member>
        <member name="P:Diamond.Core.Example.CreateInvoiceAsyncAction.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.CreateInvoiceAsyncAction.RepositoryFactory">
            <summary>
            Holds the reference to <see cref="T:Diamond.Core.Repository.IRepositoryFactory"/>.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.CreateInvoiceAsyncAction.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.CreateInvoiceAsyncAction.ActionKey">
            <summary>
            As a best practice, the name of this class should match the controller
            method name with the word "Action" appended to the end. The DoActionController
            uses [CallerMemberName] as the action key by default.
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.CreateInvoiceAsyncAction.ExecuteActionAsync(Diamond.Core.Example.Invoice)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.DeleteInvoiceAsyncAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.DeleteInvoiceAsyncAction.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Example.DeleteInvoiceAsyncAction},Diamond.Core.Repository.IRepositoryFactory,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repositoryFactory"></param>
            <param name="mapper"></param>
        </member>
        <member name="P:Diamond.Core.Example.DeleteInvoiceAsyncAction.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.DeleteInvoiceAsyncAction.RepositoryFactory">
            <summary>
            Holds the reference to <see cref="T:Diamond.Core.Repository.IRepositoryFactory"/>.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.DeleteInvoiceAsyncAction.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.DeleteInvoiceAsyncAction.ActionKey">
            <summary>
            As a best practice, the name of this class should match the controller
            method name with the word "Action" appended to the end. The DoActionController
            uses [CallerMemberName] as the action key by default.
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.DeleteInvoiceAsyncAction.ExecuteActionAsync(System.String)">
            <summary>
            
            </summary>
            <param name="invoiceNumber"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.GetAllInvoicesAsyncAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.GetAllInvoicesAsyncAction.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Example.GetAllInvoicesAsyncAction},Diamond.Core.Repository.IRepositoryFactory,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repositoryFactory"></param>
            <param name="mapper"></param>
        </member>
        <member name="P:Diamond.Core.Example.GetAllInvoicesAsyncAction.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.GetAllInvoicesAsyncAction.RepositoryFactory">
            <summary>
            Holds the reference to <see cref="T:Diamond.Core.Repository.IRepositoryFactory"/>.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.GetAllInvoicesAsyncAction.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.GetAllInvoicesAsyncAction.ActionKey">
            <summary>
            As a best practice, the name of this class should match the controller
            method name with the word "Action" appended to the end. The DoActionController
            uses [CallerMemberName] as the action key by default.
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.GetAllInvoicesAsyncAction.ExecuteActionAsync(System.Object)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.GetInvoiceAsyncAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.GetInvoiceAsyncAction.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Example.CreateInvoiceAsyncAction},Diamond.Core.Repository.IRepositoryFactory,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repositoryFactory"></param>
            <param name="mapper"></param>
        </member>
        <member name="P:Diamond.Core.Example.GetInvoiceAsyncAction.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.GetInvoiceAsyncAction.RepositoryFactory">
            <summary>
            Holds the reference to <see cref="T:Diamond.Core.Repository.IRepositoryFactory"/>.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.GetInvoiceAsyncAction.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.GetInvoiceAsyncAction.ActionKey">
            <summary>
            As a best practice, the name of this class should match the controller
            method name with the word "Action" appended to the end. The DoActionController
            uses [CallerMemberName] as the action key by default.
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.GetInvoiceAsyncAction.ExecuteActionAsync(System.String)">
            <summary>
            
            </summary>
            <param name="invoiceNumber"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.MarkInvoicePaidAsyncAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.MarkInvoicePaidAsyncAction.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Example.MarkInvoicePaidAsyncAction},Diamond.Core.Repository.IRepositoryFactory,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repositoryFactory"></param>
            <param name="mapper"></param>
        </member>
        <member name="P:Diamond.Core.Example.MarkInvoicePaidAsyncAction.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.MarkInvoicePaidAsyncAction.RepositoryFactory">
            <summary>
            Holds the reference to <see cref="T:Diamond.Core.Repository.IRepositoryFactory"/>.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.MarkInvoicePaidAsyncAction.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.MarkInvoicePaidAsyncAction.ActionKey">
            <summary>
            As a best practice, the name of this class should match the controller
            method name with the word "Action" appended to the end. The DoActionController
            uses [CallerMemberName] as the action key by default.
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.MarkInvoicePaidAsyncAction.ExecuteActionAsync(System.ValueTuple{System.String,System.Boolean})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.UpdateInvoiceAsyncAction">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.UpdateInvoiceAsyncAction.#ctor(Microsoft.Extensions.Logging.ILogger{Diamond.Core.Example.UpdateInvoiceAsyncAction},Diamond.Core.Repository.IRepositoryFactory,AutoMapper.IMapper)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="repositoryFactory"></param>
            <param name="mapper"></param>
        </member>
        <member name="P:Diamond.Core.Example.UpdateInvoiceAsyncAction.Logger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.UpdateInvoiceAsyncAction.RepositoryFactory">
            <summary>
            Holds the reference to <see cref="T:Diamond.Core.Repository.IRepositoryFactory"/>.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.UpdateInvoiceAsyncAction.Mapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.UpdateInvoiceAsyncAction.ActionKey">
            <summary>
            As a best practice, the name of this class should match the controller
            method name with the word "Action" appended to the end. The DoActionController
            uses [CallerMemberName] as the action key by default.
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.UpdateInvoiceAsyncAction.ExecuteActionAsync(System.ValueTuple{System.String,Diamond.Core.Example.InvoiceUpdate})">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.InvoicesController">
            <summary>
            Retrieves invoice information from the ERP system.
            </summary>y
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.#ctor(Diamond.Core.AspNet.DoAction.IDoActionFactory)">
            <summary>
            Creates an instance of <see cref="T:Diamond.Core.Example.InvoicesController"/> with a dependency
            on <see cref="T:Diamond.Core.AspNet.DoAction.IDoActionFactory"/>.
            </summary>
            <param name="doActionFactory"></param>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.GetInvoiceAsync(System.String)">
            <summary>
            Gets a specific invoice by invoice number.
            </summary>
            <param name="invoiceNumber">The unique invoice number of the invoice to retrieve.</param>
            <returns>Gets an invoice from the ERP system matching the given invoice number.</returns>
            <response code="200">The invoice was successfully retrieved from the ERP system with the given invoice number.</response>
            <response code="400">The request failed due to a client error. In some cases, the response will have more details.</response>
            <response code="404">An invoice with the specified invoice number was not found.</response>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.GetAllInvoicesAsync">
            <summary>
            Gets the full list of invoices available.
            </summary>
            <returns>A list of all available invoices in the ERP system.</returns>
            <response code="200">A list of all available invoices in the ERP system was successfully retrieved.</response>
            <response code="404">There are currently no invoices available in the system.</response>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.CreateInvoiceAsync(Diamond.Core.Example.Invoice)">
            <summary>
            Create a new invoice.
            </summary>
            <param name="item">The details of the new invoice.</param>
            <response code="200">The invoice was successfully created.</response>
            <response code="400">The invoice details were invalid or resulted in a duplicate invoice.</response>
            <returns>The newly create invoice.</returns>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.UpdateInvoiceAsync(System.String,Diamond.Core.Example.InvoiceUpdate)">
            <summary>
            Update an existing invoice.
            </summary>
            <param name="invoiceNumber">The unique invoice number of the invoice to update.</param>
            <param name="item">The updated details of the invoice.</param>
            <response code="200">The invoice was successfully created.</response>
            <response code="400">The invoice could not be updated.</response>
            <response code="404">The invoice specified was not found.</response>
            <returns>The updated invoice.</returns>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.MarkInvoicePaidAsync(System.String,System.Boolean)">
            <summary>
            Mark an existing invoice paid/unpaid.
            </summary>
            <param name="invoiceNumber">The unique invoice number of the invoice to update.</param>
            <param name="paid">Determines whether to mark the invoice paid (true) or unpaid (false).</param>
            <response code="200">The invoice was successfully created.</response>
            <response code="400">The invoice could not be updated.</response>
            <response code="404">The invoice specified was not found.</response>
            <returns>The details of the updated invoice.</returns>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.DeleteInvoiceAsync(System.String)">
            <summary>
            Delete an existing invoice.
            </summary>
            <param name="invoiceNumber">The unique invoice number of the invoice to delete.</param>
            <response code="200">The invoice was successfully deleted.</response>
            <response code="404">The invoice specified was not found.</response>
            <returns>The details of the invoice that was deleted.</returns>
        </member>
        <member name="M:Diamond.Core.Example.InvoicesController.OnCreateProblemDetail(Microsoft.AspNetCore.Mvc.ProblemDetails)">
            <summary>
            Use this method to change the details of the problem details
            returned to th client when the return status is anything other
            than 200.
            </summary>
            <param name="problemDetails">The instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> that will be returned to the client.</param>
            <returns>An instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>.</returns>
        </member>
        <member name="T:Diamond.Core.Example.StandardOperationFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.StandardOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:Diamond.Core.Example.UnsupportedMediaTypeFilter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.UnsupportedMediaTypeFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:Diamond.Core.Example.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="T:Diamond.Core.Example.AutoMapperStartup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.AutoMapperStartup.AddMyAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.DiamondCoreStartup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.DiamondCoreStartup.AddMyDiamondCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.MvcStartup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.MvcStartup.AddMyMvc(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Diamond.Core.Example.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Diamond.Core.Example.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:Diamond.Core.Example.SwaggerStartup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.SwaggerStartup.UseMySwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Example.SwaggerStartup.AddMySwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:Diamond.Core.Example.SwaggerStartup.LoadXmlCommentFiles(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Load any XML comment files found in the folder ./XmlDocs this
            are to be used for Swagger documentation.
            </summary>
            <param name="config"></param>
        </member>
        <member name="T:Diamond.Core.Example.VersioningStartup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Diamond.Core.Example.VersioningStartup.AddMyVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Diamond.Core.Example.Invoice">
            <summary>
            Contains the details of an invoice.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.Invoice.Number">
            <summary>
            The unique invoice number.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.Invoice.Paid">
            <summary>
            Determines if the invoice has been paid or not.
            </summary>
        </member>
        <member name="T:Diamond.Core.Example.InvoiceUpdate">
            <summary>
            Contains the details of an invoice that support being updated.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.InvoiceUpdate.Description">
            <summary>
            A description of invoice.
            </summary>
        </member>
        <member name="P:Diamond.Core.Example.InvoiceUpdate.Total">
            <summary>
            The total dollar amount of the invoice.
            </summary>
        </member>
    </members>
</doc>
